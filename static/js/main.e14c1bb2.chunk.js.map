{"version":3,"sources":["components/NavBar/NavBar.jsx","components/Main/Home.jsx","components/Background.jsx","components/Modal/Modal.jsx","components/DisplayMonster.jsx","components/Monster.jsx","components/DisplayMovie.jsx","components/Movies.jsx","components/result.jsx","App.js","serviceWorker.js","index.js"],"names":["NavBar","className","Home","href","type","React","Component","Background","c","document","getElementById","ctx","getContext","w","width","window","innerWidth","h","height","innerHeight","clearColor","max","drops","random","min","Math","O","this","x","y","color","vy","vw","vh","size","hit","a","va","beginPath","moveTo","bezierCurveTo","strokeStyle","stroke","closePath","fillStyle","fillRect","update","init","addEventListener","i","setTimeout","o","push","setup","anim","draw","requestAnimationFrame","id","Modal","name","DisplayMonster","monster","src","picture","alt","Monster","props","state","getMonster","bind","idRandom","Number","floor","axios","get","then","response","data","setState","monsters","DisplayMovie","movie","title","posterUrl","director","year","Movie","getMovie","movies","Result","App","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e14c1bb2.chunk.js","sourcesContent":["import React from 'react';\nimport './NavBar.css';\n\nfunction NavBar () {\n    return (\n        <div>\n            <p className=\"nav\">Watch the monsters in you ?</p>\n        </div>\n\n    )\n}\n\n\n\n\nexport default  NavBar;","import React from \"react\";\nimport \"./home.css\"\nimport {NavLink} from \"react-router-dom\";\n\nclass Home extends React.Component{\n    render(){\n        return(\n            <div >\n                <div className=\"btn\">\n                <a  href=\"../modal\">\n                <button  className=\"btn-home\" type=\"button\"> Click me                 \n                </button>\n                </a>\n                {/* <NavLink  to=\"/modal\">\n                 Click me                 \n                </NavLink> */}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Home;","import React from 'react';\n\nclass Background extends React.Component {\n    // constructor() {\n    //     super();\n    // }\n\n    componentDidMount() {\n        let c = document.getElementById(\"canvas\");\n        let ctx = c.getContext(\"2d\");\n        let w = c.width = window.innerWidth;\n        let h = c.height = window.innerHeight;\n        let clearColor = 'rgba(0, 0, 0, .1)';\n        let max = 30;\n        let drops = [];\n\n        function random(min, max) {\n            return Math.random() * (max - min) + min;\n        }\n\n        function resize() {\n            w = c.width = window.innerWidth;\n            h = c.height = window.innerHeight;\n        }\n\n        function setup() {\n            for (let i = 0; i < max; i++) {\n                (function (j) {\n                    setTimeout(function () {\n                        var o = new O();\n                        o.init();\n                        drops.push(o);\n                    }, j * 200)\n                }(i));\n            }\n        }\n\n        function anim() {\n            ctx.fillStyle = clearColor;\n            ctx.fillRect(0, 0, w, h);\n            for (var i in drops) {\n                drops[i].draw();\n            }\n            requestAnimationFrame(anim);\n        }\n\n        class O {\n            init() {\n                this.x = random(0, w);\n                this.y = 0;\n                this.color = 'hsl(000, 100%, 40%)';\n                this.w = 2;\n                this.h = 1;\n                this.vy = random(4, 5);\n                this.vw = 3;\n                this.vh = 1;\n                this.size = 2;\n                this.hit = random(h * .9, h * 1);\n                this.a = 1;\n                this.va = .96;\n            }\n\n            draw() {\n                if (this.y > this.hit) {\n                    ctx.beginPath();\n                    ctx.moveTo(this.x, this.y - this.h / 2);\n\n                    ctx.bezierCurveTo(\n                        this.x + this.w / 2, this.y - this.h / 2,\n                        this.x + this.w / 2, this.y + this.h / 2,\n                        this.x, this.y + this.h / 2);\n\n                    ctx.bezierCurveTo(\n                        this.x - this.w / 2, this.y + this.h / 2,\n                        this.x - this.w / 2, this.y - this.h / 2,\n                        this.x, this.y - this.h / 2);\n\n                    ctx.strokeStyle = 'hsla(0, 100%, 40%, ' + this.a + ')';\n                    ctx.stroke();\n                    ctx.closePath();\n\n                } else {\n                    ctx.fillStyle = this.color;\n                    ctx.fillRect(this.x, this.y, this.size, this.size * 5);\n                }\n                this.update();\n            }\n\n            update() {\n                if (this.y < this.hit) {\n                    this.y += this.vy;\n                } else {\n                    if (this.a > .03) {\n                        this.w += this.vw;\n                        this.h += this.vh;\n                        if (this.w > 100) {\n                            this.a *= this.va;\n                            this.vw *= .98;\n                            this.vh *= .98;\n                        }\n                    } else {\n                        this.init();\n                    }\n                }\n            }\n        }\n\n        window.addEventListener(\"resize\", resize);\n\n        setup();\n        anim();\n\n    }\n\n    render() {\n\n        return (\n            <canvas id=\"canvas\"></canvas>\n        )\n    }\n}\n\nexport default Background;","import React from 'react';\nimport './modal.css';\nimport '../NavBar/Grid/Grid.css';\n\n\n\nclass Modal extends React.Component {\n        render() {\n                return (\n\n                        <div className=\"modal dsk-offset-3 dsk-6 tab-offset-2 tab-8 mob-offset-1 mob-10\">\n                                <ul >\n                                        <li className=\"questions\">What's your favorite cocktail ?</li>\n                                        <li>I love Bloody Mary.<input type=\"checkbox\" name=\"audio\" /></li>\n                                        <li>I prefer unicorn's milk.<input type=\"checkbox\" name=\"audio\" /></li>\n                                </ul>\n\n                                <ul>\n                                        <li className=\"questions\">What's your favorite meal ?</li>\n                                        <li>I love fried eyes for breakfast.<input type=\"checkbox\" name=\"audio\" /></li>\n                                        <li>Young children's brains.<input type=\"checkbox\" name=\"audio\" /></li>\n                                </ul>\n                                <ul>\n                                        <li className=\"questions\">What's your favorite tool ?</li>\n                                        <li>My chainsaw is my best friend.<input type=\"checkbox\" name=\"audio\" /></li>\n                                        <li>I love playing around with my saw.<input type=\"checkbox\" name=\"audio\" /></li>\n                                </ul>\n                                <div>\n                                        <a href=\"/result\">\n                                                <button className=\"confirm\" type=\"button\"> Confirm\n                                                </button>\n                                        </a>\n                                </div>\n                        </div>\n                );\n        }\n}\n\nexport default Modal;\n\n\n\n\n","import React from 'react';\nimport './monster.css';\n\n\n\nfunction DisplayMonster({ monster }) {\n    return (\n        <div className=\"DisplayMonster dsk-offset-1 dsk-2 tab-offset-1 tab-3 mob-offset-1 mob-3\">\n            <img className=\"monsterImg\"\n                src={monster.picture}\n                alt={monster.name}\n            />\n            <ul className=\"ul\">\n                <li className=\"monsterName\">\n                     {monster.name}\n                </li>\n                \n            </ul>\n        </div>\n    );\n};\n\nexport default DisplayMonster;","import React from \"react\";\nimport axios from \"axios\";\nimport DisplayMonster from \"./DisplayMonster\";\n\n\nclass Monster extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      monster: null\n    };\n    this.getMonster =this.getMonster.bind(this);\n  }\n\n  componentDidMount() {\n    this.getMonster();\n  }\n\n  getMonster() {   \n    let idRandom = Number(Math.floor(Math.random() * 20));\n     axios\n      .get(\"https://hackathon-wild-hackoween.herokuapp.com/monsters\")\n      .then(response => response.data)\n      .then(data => {\n        this.setState({\n          monster: data.monsters[idRandom]\n        });\n      });\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.monster ? (\n          <DisplayMonster monster={this.state.monster} />\n        ) : (\n          <p> No data </p>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Monster;\n","import React from 'react';\nimport './monster.css';\n\n\nfunction DisplayMovie({ movie }) {\n    return (\n        <div className=\"DisplayMovie dsk-offset-1 dsk-3 tab-offset-1 tab-2 mob-offset-1 mob-3\">\n            <h3>\n                     {movie.title}\n                </h3>\n            <img className=\"movieImg\"\n\n                src={movie.posterUrl}\n                alt={movie.title}\n            />\n            <ul>\n                \n                <li> {movie.director} ({movie.year})</li>\n            \n            </ul>\n        </div>\n    );\n};\n\nexport default DisplayMovie;","import React from \"react\";\nimport axios from \"axios\";\nimport DisplayMovie from \"./DisplayMovie\"\n\nclass Movie extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movie: null\n    };\n    this.getMovie =this.getMovie.bind(this);\n  }\n\n  componentDidMount() {\n    this.getMovie();\n  }\n\n\n  getMovie() {   \n    let idRandom = Number(Math.floor(Math.random() * 82));\n     axios\n      .get(\"https://hackathon-wild-hackoween.herokuapp.com/movies\")\n      .then(response => response.data)\n      .then(data => {\n        this.setState({\n          movie: data.movies[idRandom]\n        });\n      });\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.movie ? (\n          <DisplayMovie movie={this.state.movie} />\n        ) : (\n          <p> No data </p>\n        )}\n\n\n      </div>\n    );\n  }\n}\n\nexport default Movie;\n","import React from \"react\";\nimport Monster from \"./Monster\";\nimport Movie from \"./Movies\";\nimport './monster.css';\n\nclass Result extends React.Component{\n    render(){\n        return(\n\n            <div className=\"row tab-12\">\n            \n                   \n               <Movie />   \n               <Movie />\n               <Monster />        \n               <Movie />\n               <Movie />\n             \n           </div>\n        )\n    }\n}\n\nexport default Result;","import React from 'react';\nimport NavBar from './components/NavBar/NavBar';\nimport Home from './components/Main/Home'\nimport './App.css';\nimport { Switch, Route } from 'react-router-dom';\nimport Background from './components/Background';\nimport Modal from './components/Modal/Modal';\nimport Result from './components/result';\n\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavBar />\n        <Switch>\n        <Route exact path=\"/\" component={Home}/>\n        <Route path=\"/modal\" component={Modal}/>\n        <Route path=\"/result\" component={Result}/>\n      </Switch>      \n      <Background />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter as Router} from 'react-router-dom';\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>,\n\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}